// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

using System;
using Newtonsoft.Json;

namespace ClientApplication.ExternalServices.ServerApplicationClient.Models
{
    public partial class SearchResult
    {
        /// <summary>
        /// Initializes a new instance of the SearchResult class.
        /// </summary>
        public SearchResult() { }

        /// <summary>
        /// Initializes a new instance of the SearchResult class.
        /// </summary>
        public SearchResult(int id, decimal margin, DateTime activeDate, bool isActive, ProductType productType, string productName = default(string), int? yearsActive = default(int?), bool? export = default(bool?), ExportType? exportType = default(ExportType?))
        {
            Id = id;
            ProductName = productName;
            Margin = margin;
            ActiveDate = activeDate;
            IsActive = isActive;
            YearsActive = yearsActive;
            Export = export;
            ProductType = productType;
            ExportType = exportType;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public int Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ProductName")]
        public string ProductName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Margin")]
        public decimal Margin { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ActiveDate")]
        public DateTime ActiveDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsActive")]
        public bool IsActive { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "YearsActive")]
        public int? YearsActive { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Export")]
        public bool? Export { get; set; }

        /// <summary>
        /// Possible values include: 'conventional', 'fHA', 'uSDA'
        /// </summary>
        [JsonProperty(PropertyName = "ProductType")]
        public ProductType ProductType { get; set; }

        /// <summary>
        /// Possible values include: 'fannie', 'freddie'
        /// </summary>
        [JsonProperty(PropertyName = "ExportType")]
        public ExportType? ExportType { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
        }
    }
}

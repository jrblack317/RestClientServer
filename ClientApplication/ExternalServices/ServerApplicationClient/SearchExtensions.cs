// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using ClientApplication.ExternalServices.ServerApplicationClient.Models;

namespace ClientApplication.ExternalServices.ServerApplicationClient
{
    /// <summary>
    /// Extension methods for Search.
    /// </summary>
    public static partial class SearchExtensions
    {
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='criteria'>
        /// </param>
        public static IList<SearchResult> PerformBestExSearch(this ISearch operations, SearchCriteria criteria)
        {
            return Task.Factory.StartNew(s => ((ISearch)s).PerformBestExSearchAsync(criteria), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }

        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='criteria'>
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async Task<IList<SearchResult>> PerformBestExSearchAsync(this ISearch operations, SearchCriteria criteria, CancellationToken cancellationToken = default(CancellationToken))
        {
            using (var _result = await operations.PerformBestExSearchWithHttpMessagesAsync(criteria, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }

    }
}
